name: Main CICD Workflow

on:
  push:
    branches: [ '**' ]
  schedule:
    - cron:  '30 7 * * *'
  pull_request:
    branches: [ main ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
          testing: false

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push lite
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-lite
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:lite
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:lite-${{ github.sha }}

      - name: Build and Push full
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-full
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:full
            ${{ secrets.DOCKERHUB_USERNAME }}/skillarch:full-${{ github.sha }}
  
  semgrep:
    name: semgrep
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
      - uses: actions/checkout@v4
      - run: |
          semgrep ci
        env:
          # Generate a token from Semgrep AppSec Platform > Setting
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}


  trivy:
    name: trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          scanners: 'misconfig,secret'
      - name: Run Trivy in image mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/skillarch:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: 'misconfig,secret'
          skip-dirs: '/opt/lists,/opt/ghidra,/opt/metasploit,/opt/exploitdb,/home/hacker/.rustup/toolchains,/home/hacker/.local/go,/opt/phpggc,/opt/pypotomux/wordlists,/usr/NX/etc/keys,/usr/NX/share/keys,/home/hacker/.nuclei-templates' # Chunky boys
          skip-files: '/home/hacker/.local/share/pipx/venvs/yt-dlp/lib/python3.13/site-packages/yt_dlp/extractor/shahid.py,/home/hacker/.local/share/mise/installs/go/1.24.1/src/crypto/x509/platform_root_key.pem'
  
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trufflesecurity:
    name: trufflesecurity
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/trufflesecurity/trufflehog
    steps:
      - name: Run trufflehog
        run: |
          trufflehog docker --image '${{ secrets.DOCKERHUB_USERNAME }}/skillarch:latest' --results=verified --exclude-detectors=Mailgun